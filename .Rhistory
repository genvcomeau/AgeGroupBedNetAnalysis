View(NetuseHHHi)
HHNetsHi<-
merge(NetuseHHHi, HHNetsHi, by.x = "HHNo", by.y = "HHNo")
View(HHNetsHi)
HHNetsLow<-
merge(NetuseHHLow, HHNetsLow, by.x = "HHNo", by.y = "HHNo")
View(HHNetsLow)
rm(NetuseHHHi)
rm(NetuseHHLow)
View(HHNetsLow)
exists(HHNetsHi$HHMNo> HHNetsHi$HHtot)
if(HHNetsHi$HHMNo> HHNetsHi$HHtot, TRUE, FALSE)
HHNetsHi$HHMNo> HHNetsHi$HHtot
pmax(HHNetsHi$HHMNo, HHNetsHi$HHtot)
HHMNo<- pmax(HHNetsHi$HHMNo, HHNetsHi$HHtot)
HHNetsHi$HHMNo<- pmax(HHNetsHi$HHMNo, HHNetsHi$HHtot)
rm(HHMNo)
HHNetsHi$HHMNo> HHNetsHi$HHtot
is.true(HHNetsHi$HHMNo< HHNetsHi$HHtot)
HHNetsHi$HHMNo< HHNetsHi$HHtot
rm(HHNetsHi$HHtot)
save.image()
HHNetsLow$HHMNo<- pmax(HHNetsLow$HHMNo, HHNetsLow$HHtot)
echo "# BedNetAnalysis" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/genvcomeau/BedNetAnalysis.git
git push -u origin master
save.image()
View(HHNetsLow)
HHNetsLow$pLNNET<- (HHNetsLow$`(sum(LNNET))`/(HHNetsLow$`(sum(LNNET))`+HHNetsLow$`(sum(NoNet))`))
View(HHNetsLow)
HHNetsHi$pLNNET<- (HHNetsHi$`(sum(LNNET))`/(HHNetsHi$`(sum(LNNET))`+HHNetsHi$`(sum(NoNet))`))
class(HHNetsHi)
class(HHNetsLo)
class(HHNetsLow)
Bed.Net.High[c("HHMNo", "NETNO", "Netspp", "pLNNET")]<- NA
View(Bed.Net.High)
View(Bed.Net.Low)
View(Bed.Net.High)
Bed.Net.High[c("HHMNo", "NETNO", "Netspp", "pLNNET")]<- NA
Bed.Net.Low[c("HHMNo", "NETNO", "Netspp", "pLNNET")]<- NA
for(HHNetsHi$HHNo){
if(HHNetsHi$HHNo == Bed.Net.High$HHNo,
Bed.Nets.High$HHMNo == HHNetsHi$HHMNo)
}
if(HHNetsHi$HHNo == Bed.Net.High$HHNo,
Bed.Nets.High$HHMNo == HHNetsHi$HHMNo)
if(HHNetsHi$HHNo=Bed.Net.High$HHNo, Bed.Nets.High$HHMNo= HHNetsHi$HHMNo)
if(HHNetsHi$HHNo==Bed.Net.High$HHNo, Bed.Nets.High$HHMNo==HHNetsHi$HHMNo)
if(identical(HHNetsHi$HHNo, Bed.Net.High$HHNo), Bed.Nets.High$HHMNo <- HHNetsHi$HHMNo)
if(identical(HHNetsHi$HHNo, Bed.Net.High$HHNo), Bed.Nets.High$HHMNo <- HHNetsHi$HHMNo)
if(identical(HHNetsHi$HHNo, Bed.Net.High$HHNo), Bed.Nets.High$HHMNo <- HHNetsHi$HHMNo,)
if(HHNetsHi$HHNo %in% Bed.Net.High$HHNo, Bed.Nets.High$HHMNo <= HHNetsHi$HHMNo)
Bed.Net.High$HHMNo<- HHNetsHi$HHMNo[HHNetsHi$HHNo %in% Bed.Net.High$HHNo]
if(HHNetsHi$HHNo %in% Bed.Net.High$HHNo){
Bed.Nets.High$HHMNo <= HHNetsHi$HHMNo)
}
if(HHNetsHi$HHNo %in% Bed.Net.High$HHNo){
Bed.Nets.High$HHMNo <= HHNetsHi$HHMNo
}
if(HHNetsHi$HHNo %in% Bed.Net.High$HHNo){
Bed.Net.High$HHMNo <= HHNetsHi$HHMNo,
}
if(HHNetsHi$HHNo %in% Bed.Net.High$HHNo){
Bed.Net.High$HHMNo <= HHNetsHi$HHMNo
}
View(Bed.Net.High)
ifelse(HHNetsHi$HHNo %in% Bed.Net.High$HHNo){
Bed.Net.High$HHMNo <= HHNetsHi$HHMNo,
}
Bed.Net.High$HHMNo <- function(Bed.Net.High) {
if(Bed.Net.High$HHNo %in% HHNetsHi$HHNo){
HHNetsHi$HHMNo
}
else NA
}
if(HHNetsHi$HHNo %in% Bed.Net.High$HHNo){
Bed.Nets.High$HHMNo <= HHNetsHi$HHMNo)
}
Bed.Net.High$HHMNo<- HHNetsHi$HHMNo[HHNetsHi$HHNo %in% Bed.Net.High$HHNo]
dput(head(Bed.Net.High))
head(Bed.Net.Low)
head(Bed.Net.High)
merge(Bed.Net.High, HHNetsHi, by.x= "HHNo", by.y= "HHNo")
mlm.Hi<- merge(Bed.Net.High, HHNetsHi, by.x= "HHNo", by.y= "HHNo")
View(mlm.Hi)
View(HHNetsHi)
View(mlm.Hi)
rm(mlm.Hi$Netspp.x, mlm.Hi$pLNNET.x)
rm("mlm.Hi$Netspp.x", "mlm.Hi$pLNNET.x")
mlm.Hi$Netspp.x<- NULL
mlm.Hi$pLNNET.x<- NULL
mlm.Hi$HHMNo.x<- NULL
mlm.Hi$NETNO.x<- NULL
mlm.Hi$HHtot<- NULL
save.image()
View(HHNetsLow)
HHNetsLow$HHtot<- NULL
View(Bed.Net.Low)
Bed.Net.Low$HHMNo<- NULL
Bed.Net.Low$NETNO<- NULL
Bed.Net.Low$Netspp<- NULL
Bed.Net.Low$pLNNET<- NULL
mlm.Lo<- merge(Bed.Net.Low, HHNetsLow, by.x= "HHNo", by.y= "HHNo")
View(mlm.Lo)
save.image()
save.image()
sub("N", 0, mlm.Lo$MAL12)
mlm.Lo$MAL12<- sub("N", 0, mlm.Lo$MAL12)
mlm.Hi$MAL12<- sub("N", 0, mlm.Hi$MAL12)
View(mlm.Hi)
save.image()
mlm.Hi$SHRSLP<- sub("N",0, mlm.Hi$SHRSLP)
mlm.Hi$SHRSLP<- sub("Y",1, mlm.Hi$SHRSLP)
mlm.Lo$SHRSLP<- sub("Y",1, mlm.Lo$SHRSLP)
mlm.Lo$SHRSLP<- sub("N",0, mlm.Lo$SHRSLP)
mlm.Lo$SLPSTRUCT<- sub("main house",1, mlm.Lo$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("main house",1, mlm.Hi$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("store",1, mlm.Hi$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("kitchen",0, mlm.Hi$SLPSTRUCT)
mlm.Lo$SLPSTRUCT<- sub("kitchen",0, mlm.Lo$SLPSTRUCT)
mlm.Lo$SLPSTRUCT<- sub("Other",0, mlm.Lo$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("Other",0, mlm.Hi$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("Grandparen",0, mlm.Hi$SLPSTRUCT)
mlm.Lo$SLPSTRUCT<- sub("Grandparen",0, mlm.Lo$SLPSTRUCT)
mlm.Lo$SLPSTRUCT<- sub("store",0, mlm.Lo$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("store",0, mlm.Hi$SLPSTRUCT)
unique(mlm.Hi$SLPSTRUCT)
unique(mlm.Lo$SLPSTRUCT)
xtabs(Age + Pregnant, data = mlm.Hi)
xtabs(~Age + Pregnant, data = mlm.Hi)
xtabs(~Sex + Pregnant, data = mlm.Hi)
mlm.Hi$SLPSTRUCT<- sub("",NA, mlm.Hi$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- Bed.Net.High$SLPSTRUCT
mlm.Hi$SLPSTRUCT<- merge(Bed.Net.High$SLPSTRUCT, mlm.Hi$SLPSTRUCT, by.x = Bed.Net.High$HHNo, by.y= mlm.Hi$HHNo)
mlm.Hi$SLPSTRUCT<- merge(Bed.Net.High[,SLPSTRUCT], mlm.Hi[,SLPSTRUCT], by.x = Bed.Net.High$HHNo, by.y= mlm.Hi$HHNo)
mlm.Hi.dummy<-
merge(Bed.Net.High, HHNetsHi, by.x= "HHNo", by.y= "HHNo")
View(mlm.Hi.dummy)
mlm.Hi$SLPSTRUCT<- mlm.Hi.dummy$SLPSTRUCT
rm(mlm.Hi.dummy)
mlm.Hi$SLPSTRUCT<- sub("kitchen",0, mlm.Hi$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("main house",0, mlm.Hi$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("Other",0, mlm.Hi$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("Grandparen",0, mlm.Hi$SLPSTRUCT)
mlm.Hi.dummy<-
merge(Bed.Net.High, HHNetsHi, by.x= "HHNo", by.y= "HHNo")
mlm.Hi$SLPSTRUCT<- mlm.Hi.dummy$SLPSTRUCT
rm(mlm.Hi.dummy)
mlm.Hi$SLPSTRUCT<- sub("kitchen",0, mlm.Hi$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("Grandparen",0, mlm.Hi$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("Other",0, mlm.Hi$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("main house",1, mlm.Hi$SLPSTRUCT)
mlm.Hi$SLPSTRUCT<- sub("store",0, mlm.Hi$SLPSTRUCT)
logit.Hi<-
glm(LNNET ~ Age + Pregnant + Sex + NETDF + SHRSLP+
Netspp + SLPSTRUCT + MAL12 + HHMNo.y + Netspp.y,
data = mlm.Hi, family = "binomial")
save.image()
logit.Hi<-
glm(LNNET ~ Age + Pregnant + Sex + NETDF + SHRSLP+
SLPSTRUCT + MAL12 + HHMNo.y + Netspp.y,
data = mlm.Hi, family = "binomial")
summary(logit.Hi)
logit.Lo<-
glm(LNNET ~ Age + Pregnant + Sex + NETDF + SHRSLP+
SLPSTRUCT + MAL12 + HHMNo.y + Netspp.y,
data = mlm.Lo, family = "binomial")
logit.Lo<-
glm(LNNET ~ Age + Pregnant + Sex + NETDF + SHRSLP+
SLPSTRUCT + MAL12 + HHMNo + Netspp,
data = mlm.Lo, family = "binomial")
logit.Lo<-
glm(LNNET ~ Age + Pregnant + Sex + NETDF + SHRSLP+
SLPSTRUCT + MAL12 + HHMNo + Netspp,
data = mlm.Lo, family = "binomial", na.action= na.exclude)
save.image()
mlm.Lo[which(is.nan(mlm.Lo))] = NA
mlm.Lo[which(mlm.Lo==Inf)] = NA
is.nan(mlm.Lo)
class(mlm.Lo)
mlm.Lo[mlm.Lo == "NaN"] = NA
logit.Lo<-
glm(LNNET ~ Age + Pregnant + Sex + NETDF + SHRSLP+
SLPSTRUCT + MAL12 + HHMNo + Netspp,
data = mlm.Lo, family = "binomial", na.action= na.exclude)
mlm.Lo[mlm.Lo == "Inf"] = NA
logit.Lo<-
glm(LNNET ~ Age + Pregnant + Sex + NETDF + SHRSLP+
SLPSTRUCT + MAL12 + HHMNo + Netspp,
data = mlm.Lo, family = "binomial", na.action= na.exclude)
summary(logit.Lo)
logit.sig.Lo<-
glm(LNNET ~ Sex + NETDF + Netspp,
data = mlm.Lo, family = "binomial", na.action= na.exclude)
summary(logit.sig.Lo)
logit.sig.Hi<-
glm(LNNET ~ Age + Sex + NETDF +
SLPSTRUCT + HHMNo.y + Netspp.y,
data = mlm.Hi, family = "binomial")
summary(logit.sig.Hi)
save.image()
with(logit.sig.Hi, null.deviance - deviance)
with(logit.sig.Hi, df.null - df.residual)
with(logit.sig.Hi, pchisq(null.deviance - deviance,
df.null - df.residual, lower.tail = FALSE))
with(logit.Hi, pchisq(null.deviance - deviance,
df.null - df.residual, lower.tail = FALSE))
with(logit.Lo, pchisq(null.deviance - deviance,
df.null - df.residual, lower.tail = FALSE))
with(logit.sig.Lo, pchisq(null.deviance - deviance,
df.null - df.residual, lower.tail = FALSE))
confint.default(logit.sig.Hi)
exp(cbind(OR = coef(logit.sig.Hi), confint(logit.sig.Hi)))
warnings()
exp(cbind(OR = coef(logit.sig.Lo), confint(logit.sig.Lo)))
save.image()
class(Bed.Net.High$Sex)
unique(Bed.Net.High$Sex)
class(Bed.Net.High$Age)
predicted.Hi<- with(logit.sig.Hi,
data.frame(Age = factor(1:98), Sex = factor(c("F", "M")), NETDF = mean(NETDF), SLPSTRUC = mean(SLPSTRUC), HHMNo.y = mean(HHMNo.y), Netspp.y = mean(Netspp.y)))
predicted.Hi<- with(logit.sig.Hi,
data.frame(Age = factor(1:98), Sex = factor(c("F", "M")), NETDF1 = mean(NETDF1), SLPSTRUC = mean(SLPSTRUC), HHMNo.y = mean(HHMNo.y), Netspp.y = mean(Netspp.y)))
View(mlm.Hi)
exists(NETDF)
exists(Bed.Net.High$NETDF)
predicted.Hi<- with(logit.sig.Hi,
data.frame(Age = factor(1:98), Sex = factor(c("F", "M")), SLPSTRUC = mean(SLPSTRUC), HHMNo.y = mean(HHMNo.y), Netspp.y = mean(Netspp.y)))
objects(logit.sig.Hi)
predicted.Hi<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = factor(c("F", "M")), NETDF = mean(NETDF), SLPSTRUC = mean(SLPSTRUC), HHMNo.y = mean(HHMNo.y), Netspp.y = mean(Netspp.y)))
predicted.Hi<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = factor(c("F", "M")), NETDF = mean(NETDF, na.rm = TRUE), SLPSTRUCT = mean(SLPSTRUCT), HHMNo.y = mean(HHMNo.y), Netspp.y = mean(Netspp.y)))
predicted.Hi<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = factor(c("F", "M")), HHMNo.y = mean(HHMNo.y), Netspp.y = mean(Netspp.y)))
predicted.Hi
predicted.Hi<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = factor(c("F", "M")), HHMNo.y = mean(HHMNo.y, na.rm = TRUE), Netspp.y = mean(Netspp.y)))
predicted.Hi
predicted.Hi<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = Sex, HHMNo.y = mean(HHMNo.y, na.rm = TRUE), Netspp.y = mean(Netspp.y)))
predicted.Hi<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = factor("F":"M"), HHMNo.y = mean(HHMNo.y, na.rm = TRUE), Netspp.y = mean(Netspp.y)))
predicted.Hi<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = factor(,"F""M"), HHMNo.y = mean(HHMNo.y, na.rm = TRUE), Netspp.y = mean(Netspp.y)))
predicted.Hi<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = unique(Sex), HHMNo.y = mean(HHMNo.y, na.rm = TRUE), Netspp.y = mean(Netspp.y)))
predicted.Hi<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = factor("F"), HHMNo.y = mean(HHMNo.y, na.rm = TRUE), Netspp.y = mean(Netspp.y)))
predicted.Hi
predicted.Hi.M<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = "M", HHMNo.y = mean(HHMNo.y, na.rm = TRUE), Netspp.y = mean(Netspp.y)))
predicted.Hi.M
rbind(predicted.Hi, predicted.Hi.M)
predicted.Hi.F <- predicted.Hi
predicted.Hi<- rbind(predicted.Hi.F, predicted.Hi.M)
predicted.Lo.M<- with(mlm.Lo,
data.frame(Age = factor(1:98), Sex = "M", Netspp.y = mean(Netspp.y)))
predicted.Lo.M<- with(mlm.Lo,
data.frame(Age = factor(1:98), Sex = "M", Netspp = mean(Netspp)))
predicted.Lo.M
predicted.Lo.M<- with(mlm.Lo,
data.frame(Age = factor(1:98), Sex = "M", Netspp = mean(Netspp, na.rm = TRUE)))
predicted.Lo.M
predicted.Lo.F<- with(mlm.Lo,
data.frame(Age = factor(1:98), Sex = "F", Netspp = mean(Netspp, na.rm = TRUE)))
predicted.Lo <- rbind(predicted.Lo.F, predicted.Lo.M)
predicted.Lo
save.image()
predicted.Hi$AgeP <- predict(logit.Hi, newdata = predicted.Hi, type = "response")
predicted.Hi$AgeP <- predict(logit.sig.Hi, newdata = predicted.Hi, type = "response")
predicted.Hi.F<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = factor("F"), NETDF = mean(NETDF), SLPSTRUCT = mean(SLPSTRUCT), HHMNo.y = mean(HHMNo.y), Netspp.y = mean(Netspp.y)))
predicted.Hi.F<- with(mlm.Hi,
data.frame(Age = factor(1:98), Sex = factor("F"), NETDF = lapply(NETDF, mean, na.rm = TRUE), SLPSTRUCT = lapply(SLPSTRUCT, mean, na.rm = TRUE), HHMNo.y = mean(HHMNo.y, na.rm = TRUE), Netspp.y = mean(Netspp.y)))
warnings()
predicted.Hi.F
mean(mlm.Hi$NETDF)
lapply(mlm.Hi$NETDF, mean, na.rm = TRUE)
sum(mlm.Hi$NETDF)
save.image()
mlm.Hi$NETDF<- as.numeric(levels(mlm.Hi$NETDF))
for(Age in c(1:98)){
(sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)}
for(Age in c(1:98)){(sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)}
for(Age in c(1:98)){(sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)
}
for(Age in c(1:98)){(sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)}
for(unique(Age) in mlm.Lo){
sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)
}
for(Age = 1 in mlm.Lo){
sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)
for(Age == 1 in mlm.Lo){
sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)
for(Age in mlm.Lo){
sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)
}
summary(Age)
rm(Age)
for(Age[1:98] in mlm.Lo){
sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)}
for(unique(mlm.Lo$Age)){
sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)}
for(unique(mlm.Lo$Age)){
sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)
tapply(mlm.Lo$Age, list(mlm.Lo$Sex), sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE))
tapply(mlm.Lo$Age, list(mlm.Lo$Sex, mlm.Lo$LNNET), sum)
tapply(mlm.Lo$Age, list(mlm.Lo$Sex, mlm.Lo$LNNET), sum, na.rm = TRUE)
tapply(mlm.Lo$Age, list(mlm.Lo$Sex, mlm.Lo$LNNET, mlm.Lo$Age), sum, na.rm = TRUE)
tapply(mlm.Lo$LNNET, list(mlm.Lo$Sex, mlm.Lo$Age), sum, na.rm = TRUE)
tapply(mlm.Lo$Age, list(mlm.Lo$Sex, mlm.Lo$LNNET), sum, na.rm = TRUE)
tapply(unique(mlm.Lo$Age), list(mlm.Lo$Sex, mlm.Lo$LNNET), sum, na.rm = TRUE)
tapply(mlm.Lo$Age[1:98], list(mlm.Lo$Sex, mlm.Lo$LNNET), sum, na.rm = TRUE)
with(mlm.Lo, tapply(Age, list(Sex, LNNET), FUN = sum(x) length(unique(x)), na.rm = TRUE)
with(mlm.Lo, tapply(Age, list(Sex, LNNET), FUN = sum(x) length(unique(x)), na.rm = TRUE))
with(mlm.Lo, tapply(Age, list(Sex, LNNET), FUN = sum(x)length(unique(x)), na.rm = TRUE))
with(mlm.Lo, tapply(Age, list(Sex, LNNET), FUN = sum(x),length(unique(x)), na.rm = TRUE))
with(mlm.Lo, tapply(Age, list(Sex, LNNET), FUN = sum(Age),length(unique(Age)), na.rm = TRUE))
View(mlm.Lo)
with(mlm.Lo, tapply(Age, list(Sex, LNNET), sum(Age),length(unique(Age)), na.rm = TRUE))
with(mlm.Lo, tapply(Age, list(Sex, LNNET), sum,length(unique(Age)), na.rm = TRUE))
mlm.Lo %/% group_by(Age, Sex) %/% ifelse(mlm.Lo$Sex = "F",
(sum(mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "F", na.rm = TRUE)/
sum(mlm.Lo$Age & mlm.Lo$Sex == "F", na.rm = TRUE))
, (sum(mlm.Lo$Age == AgeppLNNET.Lo$Age & mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "M", na.rm = TRUE)/
sum(mlm.Lo$Age == AgeppLNNET.Lo$Age & mlm.Lo$Sex == "M", na.rm = TRUE)))
}
fxppLNNET.Lo  <- function(x,y){
if(mlm.Lo$Sex = "F") {
return(sum(mlm.Lo$Age == x, mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
} elseif(mlm.Lo$Sex = "M"){
return(sum(mlm.Lo$Age == x & mlm.Lo$LNNET == 1, na.rm = TRUE)/
sum(mlm.Lo$Age == x, na.rm = TRUE)))
}
}
fxppLNNET.Lo  <- function(x,y){
if(mlm.Lo$Sex == "F") {
return(sum(mlm.Lo$Age == x, mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
} else(mlm.Lo$Sex = "M"){
return(sum(mlm.Lo$Age == x & mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
}
}
fxppLNNET.Lo  <- function(x,y){
if(mlm.Lo$Sex == "F") {
return(sum(mlm.Lo$Age == x, mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
} else(mlm.Lo$Sex = "M"){
return(sum(mlm.Lo$Age == x & mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
}}
fxppLNNET.Lo  <- function(x,y){
if(mlm.Lo$Sex == "F") {
return(sum(mlm.Lo$Age == x, mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
} else(mlm.Lo$Sex = "M")
return(sum(mlm.Lo$Age == x & mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
}
save.image
save.image()
AgeppLNNET.Lo$ppLNNET<- tapply(unique(mlm.Lo$Age), fxppLNNET.Lo)
AgeppLNNET.Lo$ppLNNET<- tapply((mlm.Lo$Age[1:98]), fxppLNNET.Lo)
AgeppLNNET.Lo$ppLNNET<- tapply((mlm.Lo$Age[1:98]), fxppLNNET.Lo)
AgeppLNNET.Lo$ppLNNET<- tapply(mlm.Lo$Age, fxppLNNET.Lo)
AgeppLNNET.Lo$ppLNNET<- mapply(mlm.Lo$Age, fxppLNNET.Lo)
AgeppLNNET.Lo$ppLNNET<- apply(mlm.Lo$Age, fxppLNNET.Lo)
AgeppLNNET.Lo$ppLNNET<- apply(mlm.Lo$Age, c(1:98), fxppLNNET.Lo)
AgeppLNNET.Lo$ppLNNET<- apply(mlm.Lo$Age, mlm.Lo$Sex, fxppLNNET.Lo)
library(dplyr)
mlm.Lo %/% group_by(Age) %/% apply(fxppLNNET.Lo)
mlm.Lo %/% group_by(mlm.Lo$Age) %/% apply(fxppLNNET.Lo)
as.factor(mlm.Lo$Age)
mlm.Lo %/% group_by(mlm.Lo$Age) %/% apply(fxppLNNET.Lo)
mlm.Lo$Age<- as.factor(mlm.Lo$Age)
mlm.Lo %/% group_by(mlm.Lo$Age) %/% apply(fxppLNNET.Lo)
mlm.Lo$Age<- as.numeric(mlm.Lo$Age)
class(mlm.Lo$Age)
for(1:98) {if(mlm.Lo$Sex == "F") {
return(sum(mlm.Lo$Age == x, mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
} else(mlm.Lo$Sex = "M")
return(sum(mlm.Lo$Age == x & mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
}}
for(x = 1:98) {if(mlm.Lo$Sex == "F") {
return(sum(mlm.Lo$Age == x, mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
} else(mlm.Lo$Sex = "M")
return(sum(mlm.Lo$Age == x & mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
}}
for(x in 1:98) {if(mlm.Lo$Sex == "F") {
return(sum(mlm.Lo$Age == x, mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
} else(mlm.Lo$Sex = "M")
return(sum(mlm.Lo$Age == x & mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
}}
for(x in 1:98) {if(mlm.Lo$Sex == "F") {
return(sum(mlm.Lo$Age == x, mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
} else(mlm.Lo$Sex = "M")
return(sum(mlm.Lo$Age == x & mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
}
dummyppLNNET<- for(x in 1:98) {if(mlm.Lo$Sex == "F") {
return(sum(mlm.Lo$Age == x, mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
} else(mlm.Lo$Sex = "M")
return(sum(mlm.Lo$Age == x & mlm.Lo$LNNET == 1, na.rm = TRUE))/
(sum(mlm.Lo$Age == x, na.rm = TRUE))
}
ifelse(mlm.Lo$Sex = "F",
(sum(mlm.Lo$Age == 1 & mlm.Lo$LNNET == 1, na.rm = TRUE)/
sum(mlm.Lo$Age == 1, na.rm = TRUE))
,(sum(mlm.Lo$Age == 1 & mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "M", na.rm = TRUE)/
sum(mlm.Lo$Age == 1 & mlm.Lo$Sex == "M", na.rm = TRUE)))
if(mlm.Lo$Sex == "F",
(sum(mlm.Lo$Age == 1 & mlm.Lo$LNNET == 1, na.rm = TRUE)/
sum(mlm.Lo$Age == 1, na.rm = TRUE))
else(sum(mlm.Lo$Age == 1 & mlm.Lo$LNNET == 1 & mlm.Lo$Sex == "M", na.rm = TRUE)/
sum(mlm.Lo$Age == 1 & mlm.Lo$Sex == "M", na.rm = TRUE))
dummyppLNNET<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", "Age")], FUN=mean, na.rm=T)
View(dummyppLNNET)
dummyppLNNET<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", "Sex")], FUN=mean, na.rm=T)
dummyppLNNET<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", "Age")], FUN=mean, na.rm=T)
dummyppLNNETM<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", "Sex")], FUN=mean, na.rm=T)
View(dummyppLNNETM)
dummyppLNNETM<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", "Sex ==  M")], FUN=mean, na.rm=T)
dummyppLNNETM<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", "Sex[M]")], FUN=mean, na.rm=T)
dummyppLNNETM<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", "Sex" data = subset(Sex == "M"), FUN=mean, na.rm=T)
dummyppLNNETM<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", "Sex") data = subset(Sex == "M"), FUN=mean, na.rm=T)
dummyppLNNETM<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", subset(Sex, M))], FUN=mean, na.rm=T)
dummyppLNNETM<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", subset(mlm.Lo$Sex, M))], FUN=mean, na.rm=T)
dummyppLNNETM<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", subset(mlm.Lo$Sex, Sex == "M"))], FUN=mean, na.rm=T)
dummyppLNNETM<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", subset(mlm.Lo$Sex, M))], FUN=mean, na.rm=T)
dummyppLNNET.Hi<- aggregate(mlm.Hi$LNNET, mlm.Hi[c("Age", "Age")], FUN=mean, na.rm=T)
dummyppLNNET.Lo<- aggregate(mlm.Lo$LNNET, mlm.Lo[c("Age", "Age")], FUN=mean, na.rm=T)
rm(dummyppLNNET, dummyppLNNETM)
View(dummyppLNNET.Hi)
qplot(Age, x, dummyppLNNET.Hi)
library(ggplot2)
qplot(Age, x, dummyppLNNET.Hi)
qplot(Age, x, dummyppLNNET.Hi, xlim = max(Age), ylim = max(x))
names(dummyppLNNET.Hi)[names(dummyppLNNET.Hi)=="x"] <- "ppLNNET"
names(dummyppLNNET.Lo)[names(dummyppLNNET.Lo)=="x"] <- "ppLNNET"
View(dummyppLNNET.Lo)
qplot(Age, ppLNNET, dummyppLNNET.Hi)
qplot(Age, ppLNNET, dummyppLNNET.Hi, xlim = max(Age), ylim = max(ppLNNET))
ggplot(Age, ppLNNET, dummyppLNNET.Hi, xlim = max(Age), ylim = max(ppLNNET))
ggplot(dummyppLNNET.Hi$Age, dummyppLNNET.Hi$ppLNNET, dummyppLNNET.Hi, xlim = max(Age), ylim = max(ppLNNET))
ggplot(dummyppLNNET.Hi, aes(Age, ppLNNET), xlim = max(Age), ylim = max(ppLNNET))
ggplot(dummyppLNNET.Hi, aes(Age, ppLNNET))
ggplot(dummyppLNNET.Hi, aes(Age, ppLNNET), geom_bar(fill = "blue", stat = "identity") +
coord_flip() +
labs(title = "Title")
p)
ggplot(dummyppLNNET.Hi, aes(Age, ppLNNET), geom_bar(fill = "blue", stat = "identity") +
coord_flip() +
labs(title = "Title")
)
plot(dummyppLNNET.Hi$Age, dummyppLNNET.Hi$ppLNNET)
qplot(Age, ppLNNET, data= dummyppLNNET.Hi, geom=c("point", "smooth"),
method="lm", formula=y~x, color=cyl,
main="ppLNNET by Age, Highlands",
xlab="Age", ylab="ppLNNET")
qplot(Age, ppLNNET, data= dummyppLNNET.Hi, geom=c("point", "smooth"), log="xy",
geom=c('point')) + geom_smooth(method="lm"), color=cyl,
main="ppLNNET by Age, Highlands",
xlab="Age", ylab="ppLNNET",)
qplot(Age, ppLNNET, data= dummyppLNNET.Hi,log="xy",
geom=c('point')) + geom_smooth(method="lm"), color=cyl,
main="ppLNNET by Age, Highlands",
xlab="Age", ylab="ppLNNET")
qplot(Age, ppLNNET, data= dummyppLNNET.Hi,log="xy",
geom=c('point')) + geom_smooth(method="lm") + color=cyl,
main="ppLNNET by Age, Highlands" +
xlab="Age" + ylab="ppLNNET")
qplot(Age, ppLNNET, data= dummyppLNNET.Hi,log="xy",
geom=c('point')) + geom_smooth(method="lm") + color=cyl +
main="ppLNNET by Age, Highlands" +
xlab="Age" + ylab="ppLNNET"
qplot(Age, ppLNNET, data= dummyppLNNET.Hi,log="xy",
geom=c('point')) + geom_smooth(method="lm")
ggplot(Age, ppLNNET, data= dummyppLNNET.Hi)
geom_point() + geom_smooth()
ggplot(dummyppLNNET.Hi, aes(Age,ppLNNET)) + geom_point() + geom_smooth()
NetusebyAge.Hi<- ggplot(dummyppLNNET.Hi, aes(Age,ppLNNET)) + geom_point() + geom_smooth()
NetusebyAge.Lo<- ggplot(dummyppLNNET.Lo, aes(Age,ppLNNET)) + geom_point() + geom_smooth()
NetusebyAge.Lo
dev.copy(png,"NetusebyAgeLo.png",width=8,height=6,units="in",res=100)
dev.off()
NetusebyAge.Hi
dev.copy(png,"NetusebyAgeHi.png",width=8,height=6,units="in",res=100)
dev.off()
save.image()
AgexRDT.Hi<- aggregate(mlm.Hi$RDT, mlm.Hi[c("Age")], FUN=mean, na.rm=T)
View(AgexRDT.Hi)
View(mlm.Lo)
warnings()
class(mlm.Hi$RDT)
mlm.Hi$RDT<- as.numeric(mlm.Hi$RDT)
mlm.Lo$RDT<- as.numeric(mlm.Lo$RDT)
AgexRDT.Hi<- aggregate(mlm.Hi$RDT, mlm.Hi[c("Age")], FUN=mean, na.rm=T)
View(AgexRDT.Hi)
